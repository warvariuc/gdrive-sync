[project]
name = "gdrivesync"
requires-python = ">=3.11"

[tool.poetry]
name = "gdrivesync"
version = "0.1.0"
description = ""
authors = ["Victor Varvaryuk <victor.varvariuc@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
PyDrive2 = "*"
tenacity = "*"
click = "^8.1.7"
pydantic = "^2.6.2"
pyzipper = "^0.3.6"

[tool.poetry.group.dev.dependencies]
pdbpp = "*"
ruff = "*"
pre-commit = "^3.5.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
fix = true
show-fixes = true
line-length = 100

[tool.ruff.lint]
select = ["ALL"]
# https://docs.astral.sh/ruff/rules/
ignore = [
    "D", # Missing docstring
    "TD", # flake8-todos
    "ANN", # Missing annotations
    "FIX", # flake8-fixme
    "S101", # Use of assert detected
    "EM", # flake8-errmsg
    "TRY003", # Avoid specifying long messages outside the exception class
    "TRY002", # Create your own exception
    "RET503", # Missing explicit `return` at the end of function
    "FBT001", # Boolean-typed positional argument in function definition
]

[tool.ruff.isort]
order-by-type = false
lines-after-imports = 2

[tool.ruff.flake8-import-conventions]
# Declare the banned `from` imports.
banned-from = [
  "copy",
  "datetime",
  "functools",
  "itertools",
  "random",
  "sys",
  "unittest.mock",
  "uuid",
  # third-party
  "pydantic",
]
